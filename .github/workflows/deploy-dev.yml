name: Deploy to Development

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'corretto'
        cache: maven

    - name: Run tests
      run: mvn clean test

    - name: Build application
      run: mvn clean package -DskipTests

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=dev-latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.cloud
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_DATE=${{ steps.meta.outputs.labels['org.opencontainers.image.created'] }}
          VERSION=${{ steps.meta.outputs.labels['org.opencontainers.image.version'] }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: development

    steps:
    - name: Deploy to development environment
      run: |
        echo "Deploying to development environment..."
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest"
        # Add your deployment commands here
        # Examples:
        # - kubectl set image deployment/myapp myapp=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest
        # - docker stack deploy -c docker-compose.yml myapp
        # - helm upgrade --install myapp ./helm-chart --set image.tag=dev-latest
        # - aws ecs update-service --cluster dev --service myapp --force-new-deployment

    - name: Run health check
      run: |
        echo "Running health check..."
        # Add health check commands here
        # curl -f http://your-dev-app.com/actuator/health || exit 1

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment to development successful"
        else
          echo "❌ Deployment to development failed"
        fi